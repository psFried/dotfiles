#!/bin/bash
# Starts an interactive skim session using ripgrep to search file contents and then open the selected file(s) in neovim.
# Usage: rgopen [search-term] [-- [rg-args]...]
# The optional first argument is used as the starting search term for ripgrep, which may be modified or extended interactively.
# Any arguments after the first -- will be passed to ripgrep on each invocation, and may not be modified interactively.

arg_parse_continue=true
while [[ "$arg_parse_continue" = true && -n "$1" ]]; do
    if [[ "$1" == "--" ]]; then
        # Everything after the -- will be passed as additional arguments to ripgrep
        arg_parse_continue=false
	shift
	rgargs="$@"
    else
        if [[ -n "$starting_filter" ]]; then
        	starting_filter="${starting_filter} $1"
        else
	    starting_filter="$1"
        fi
	shift
    fi
done

if [[ -n "$starting_filter" ]]; then
    cmd_query="--cmd-query $starting_filter"
fi

# skim will print the final selections, one per line. Each selection will be the line that was returned by ripgrep, which will be in the format: <file-path>:<line-num> <line-text>
selected_files="$(sk --bind "ctrl-p:toggle-preview" ${cmd_query} --ansi --multi -i -c "rg --color=always --smart-case --line-number \"{}\" ${rgargs}" --preview="rgopen-preview.sh -v {}" --preview-window=up:50%)"
if [[ $? -ne 0 ]]; then
    exit $?
fi

# Get just the file paths from the selections, and run them through uniq in case I selected the same file multiple times.
filenames="$(echo "${selected_files}" | cut -s -d: -f1 | uniq | paste -sd ' ')"

exec nvim -O $filenames

